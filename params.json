{
  "name": "Cakephp Remember Me",
  "tagline": "Remember Me plugin for CakePHP 3",
  "body": "# RememberMe plugin for CakePHP\r\n\r\n[![Build Status](https://travis-ci.org/narendravaghela/cakephp-remember-me.svg?branch=master)](https://travis-ci.org/narendravaghela/cakephp-remember-me)\r\n[![codecov.io](https://codecov.io/github/narendravaghela/cakephp-remember-me/coverage.svg?branch=master)](https://codecov.io/github/narendravaghela/cakephp-remember-me?branch=master)\r\n\r\nThis plugin provides a basic functionality to store user data in Cookies of your CakePHP applications for login and remember user in specific browser.\r\n\r\n## Requirements\r\n\r\nThis plugin has the following requirements:\r\n\r\n* CakePHP 3.0.0 or greater.\r\n* PHP 5.4.16 or greater.\r\n\r\n## Installation\r\n\r\nYou can install this plugin into your CakePHP application using [composer](http://getcomposer.org).\r\n\r\n```\r\ncomposer require narendravaghela/cakephp-remember-me\r\n```\r\n\r\nAfter installation, [Load the plugin](http://book.cakephp.org/3.0/en/plugins.html#loading-a-plugin)\r\n```php\r\nPlugin::load('RememberMe');\r\n```\r\nOr, you can load the plugin using the shell command\r\n```sh\r\n$ bin/cake plugin load RememberMe\r\n```\r\n\r\n## Usage\r\n\r\nTo use this, simply load the RememberMe component from this plugin into your AppController or UsersController.\r\n\r\n```php\r\n$this->loadComponent('RememberMe.RememberMe');\r\n```\r\n\r\nYou can optionally pass the configuration options for this component.\r\n\r\n```php\r\n$this->loadComponent('RememberMe.RememberMe', [\r\n    'cypherKey' => \"17485937564892755682047369192734583655920926\", // Random unuqie string to encrypt/decrypt data. If not set, default salt value of the application will be used.\r\n    'cookieName' => \"rememberme\", // Name of the cookie.\r\n    'period' => '14 Days' // Time period\r\n]);\r\n```\r\n\r\nHere, the basic flow should something like this:\r\n+ Find the user from the database\r\n+ Validate\r\n+ If user has selected \"Remember me\" checkbox, store the user data using this component.\r\n+ Next time, when user (any user) visits the application, check the stored data using `getRememberedData()`.\r\n+ Use the data returned by `getRememberedData()` and validate against the database and if everything goes well, create a session of the user and make him logged in.\r\n+ If user manually logs out, simply delete the data from Cookie using `removeRememberedData()`.\r\n\r\n### Remember data\r\n\r\nIn your `login` action or the action from where user logs into your application, use the `rememberData()` function and pass the required data of user being logged in.\r\n\r\n```php\r\n$this->RememberMe->rememberData(\"data@example.com\"); // email address of user being logged in\r\n// or you can use the array as well\r\n$this->RememberMe->rememberData([\r\n  'email' => 'foo@bar.com',\r\n  'someUniqueKey' => 'someuniquevalue'\r\n]);\r\n```\r\n\r\n### Get remembered data\r\n\r\nGenerally, in our `beforeFilter()` callback, we check whether user is logged in or not. Here, we can use `getRememberedData()` to retrieve the data that we have stored in our login action earlier.\r\nIf we find something, then we can check it against our user table to check whether there is a user or not.\r\n\r\n```php\r\n$isRemembered = $this->RememberMe->getRememberedUser();\r\n\r\n// code to check this data against database\r\n// set the session\r\n// ...\r\n```\r\n\r\n### Delete data\r\n\r\nIf you need to remove user data, just call the `removeRememberedData()` and it will delete the data from Cookie.\r\n\r\nThat is it.\r\n\r\n## Reporting Issues\r\n\r\nIf you have a problem with RememberMe, please open an issue on [GitHub](https://github.com/narendravaghela/cakephp-remember-me/issues).\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}